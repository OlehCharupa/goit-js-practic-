// 1409++++++++++++++++++++++++++++++++++++++

// const hotel1 = {
//   name: "Rixos",
//   stars: "5",
//   capacity: 300,
// };
// const hotel2 = {
//   name: "Jazz",
//   stars: "5",
//   capacity: 200,
// };
// const hotel3 = {
//   name: "Dnepr",
//   stars: "2+",
//   capacity: 5000,
// };
// // ____ Обьявляем функцию_______________
// const greeting = function (str) {
//   console.log(
//     `${str}!!! Приветсвуем в отеле ${this.name}!!! Наш отель размещает ${this.capacity} гостей`
//   );
// };
// // _____ Привязка с помощью call/apply ________________
// // ______ Вызываем функцию, с передачей в скобках обьект
// // ____ с которым мы работаем и после запятой аргументы
// greeting.call(hotel1, "Oleh");
// greeting.call(hotel2, "Oleh");
// greeting.call(hotel3, "Oleh");
// // ____ Привязка с помощью Bind _______________________
// // __ создаем переменную в поторой привязываем функцию
// //  потом вызываем функцию по имени переменной, в аргументы
// //  записываем не статические данные
// const rixosGreenig = greeting.bind(hotel1);
// rixosGreenig("Oleh");

// let obj, method;
// obj = {
//   go: function () {
//     console.log(this);
//   },
// };

// // (obj.go || obj.stop)();

// console.log(obj.go || obj.stop);
// =============================================================
// =============================================================
// =============================================================
// =============================================================
// =============================================================
// let ladder = {
//   step: 0,
//   up() {
//     this.step++;
//     return this;
//   },
//   down() {
//     this.step--;
//     return this;
//   },
//   showStep: function () {
//     // показывает текущую ступеньку
//     console.log(this.step);
//     return this;
//   },
// };
// // Теперь, если нам нужно сделать несколько последовательных вызовов, мы можем выполнить это так:
// // ladder.up();
// // ladder.up();
// // ladder.down();
// // ladder.showStep(); // 1
// // Измените код методов up, down и showStep таким образом, чтобы их вызов можно было сделать по цепочке, например так:
// ladder.up().up().up().down().showStep(); // 2
// =====================================================================
// =====================================================================
// =====================================================================
// =====================================================================
// =====================================================================

// const films = function (name) {
//   return function (film) {
//     console.log(`${name} играл в фильме ${film}`);
//     filmsJonny.push(film);
//   };
// };
// let filmsJonny = [];
// const jonny = films("Jonny");
// jonny("Пираты Карибского моря");
// jonny("Пираты Карибского моря 2");
// console.log(filmsJonny);
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
// let cinema = {};

// const films = function (name) {
//   cinema[name] = [];
//   return function (film) {
//     cinema[name].push(film);
//     console.log(`${name} играл в фильме ${film}`);
//   };
// };

// const jonny = films("Jonny");
// jonny("Пираты Карибского моря");
// jonny("Пираты Карибского моря 2");

// const pitt = films("Pitt");
// pitt("Троя");

// console.log(cinema);
// ================================================================================
// ================================================================================
// ================================================================================
// ================================================================================
// const user = {
//   name: "Oleh",
//   age: 27,
//   phone: 80939551533,
//   email: "charupaoleh@gmail.com",
//   toShowProps() {
//     console.log(this.name);
//     console.log(this.age);
//     console.log(this.phone);
//     console.log(this.email);
//   },
// };

// const user2 = {
//   name: "Kostya",
// };

// const user3 = {
//   name: "Zaharia",
//   age: 102,
//   toUpdateAge(value) {
//     return (this.age = value);
//   },
// };

// const example = function (callback, value) {
//   return callback(value);
// };
// example(user.toShowProps.bind(user));

// example(user.toShowProps.bind(user2));
// console.log(example(user3.toUpdateAge.bind(user3), 20));
// =======================================================
// =======================================================================
// =======================================================================
// =======================================================================
// =======================================================================
// const toGetResult = function (callback, ...value) {
//   return callback(...value);
// };
// function toGetSum(a, b, c) {
//   return a + b + c;
// }
// function toGetMultyply(x, y) {
//   return x * y;
// }
// toGetResult((val) => console.log(val % 5), 23);
// console.log(toGetResult(toGetSum, 21, 12, 3));
// =======================================================================
// =======================================================================
// =======================================================================
// =======================================================================
// Создай массив test1, который содержит результаты тестов студентов:
// 4, 12, 6, 16, 13, 8, 13, 4, 15, 11, 14, 10, 15, 12
// С помощью цикла со счетчиком for выведи в консоль только те значения,
// которые могут быть зачтены, т.е.они должны быть больше 12,
// это значение должно храниться в переменной score1

// let test1 = [4, 12, 6, 16, 13, 8, 13, 4, 15, 11, 14, 10, 15, 12];
// let score1 = [];
// for (let elem of test1) {
//   if (elem >= 12) {
//     score1.push(elem);
//   }
// }
// console.log(score1);
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// Создай массив test2, который содержит результаты тестов студентов:
// 17, 13, 4, 15, 10, 12, 16, 21, 13, 8, 14, 18, 15, 20
// С помощью цикла со счетчиком for выведи в консоль только те значения,
// которые могут быть зачтены, т.е.они должны быть больше 15,
// это значение должно храниться в переменной score2
// let test2 = [17, 13, 4, 15, 10, 12, 16, 21, 13, 8, 14, 18, 15, 20];
// let score2 = [];
// for (let element of test2) {
//   if (element > 15) {
//     score2.push(element);
//   }
// }
// console.log(score2);
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// Создай массив test3, который содержит результаты тестов студентов:
// 20, 12, 16, 22, 13, 8, 13, 4, 15, 10, 14, 18, 15, 22
// С помощью цикла со счетчиком for выведи в консоль только те значения,
// которые могут быть зачтены, т.е.они должны быть больше 16,
// это значение должно храниться в переменной score3
// let test3 = [20, 12, 16, 22, 13, 8, 13, 4, 15, 10, 14, 18, 15, 22];
// let score3 = [];
// for (let elem of test3) {
//   if (elem > 16) {
//     score3.push(elem);
//   }
// }
// console.log(score3);
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// Создай многомерный массив tests, который содержит 3 вложенных массива,
// с результатами трех тестов студентов:
// первый: 4, 12, 6, 16, 13, 8, 13, 4, 15, 11, 14, 10, 15, 12
// второй: 17, 13, 4, 15, 10, 12, 16, 21, 13, 8, 14, 18, 15, 20
// третий: 20, 12, 16, 22, 13, 8, 13, 4, 15, 10, 14, 18, 15, 22
// Выведи в консоль все три вложенных массива с помощью цикла for
// let test3 = [
//   [4, 12, 6, 16, 13, 8, 13, 4, 15, 11, 14, 10, 15, 12],
//   [17, 13, 4, 15, 10, 12, 16, 21, 13, 8, 14, 18, 15, 20],
//   [20, 12, 16, 22, 13, 8, 13, 4, 15, 10, 14, 18, 15, 22],
// ];
// for (let elem of test3) {
//   console.log(elem);
// }
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// let userName = [];
// let userPhone = [];
// let userEmail = [];
// const toGetForm = function (name, phone, email, ...arr) {
//   console.log(arr);
//   userName.push(name);
//   userPhone.push(phone);
//   userEmail.push(email);
// };

// toGetForm("Oleh", "54845484", "fdfv@gmail.com", 11, 12, 13);

// console.log(userName);
// console.log(userPhone);
// console.log(userEmail);
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================

// const product = {
//   name: "SAAB",
//   price: 4700,
//   quantity: 13,
//   premium: true,
// };
// const sum = (value, obj) => {
//   if (obj.name === value) {
//     return obj.quantity * obj.price;
//   } else {
//     return `Такой Автомобиль не найдено`;
//   }
// };

// console.log(sum("SAAB", product));
// console.log(sum("BMB", product));
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// Создай массив authors с именами авторов:
// William Shakespeare, Guy de Maupassant, Dante Alighieri,
// Mikhail Bulgakov, Albert Camus, Erich Maria Remarque
// С помощью методов массива, добавь в конец массива authors три элемента
// со значениями:
// Honore de Balzac, Miguel de Cervantes, Anton Chekhov
// а в начало массива, три элемента со значениями:
// Charles Dickens, Edgar Allan Poe, Gabriel Garcia Marquez
// Выведи обновленный массив в консоль. В комментарии после команды консоль
// укажи количество элементов измененного массива

// let authors = [
//   "William Shakespeare",
//   "Guy de Maupassant",
//   "Dante Alighieri",
//   "Mikhail Bulgakov",
//   "Albert Camus",
//   "Erich Maria Remarque",
// ];
// console.log(authors); // 6

// authors.push("Honore de Balzac", "Miguel de Cervantes", "Anton Chekhov");
// console.log(authors); // 9

// authors.unshift("Charles Dickens", "Edgar Allan Poe", "Gabriel Garcia Marquez");
// console.log(authors); // 12

// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// ========================================================================
// Создай массив scores с элементами:
// 12, 32, 15, 17, 3, 4, 98, 67, 532, 611, 7, 100, 42
// с помощью методов массива shift() и pop(), удали первые два и
// последние три элемента
// Выведи результат в консоль

// let scores = [12, 32, 15, 17, 3, 4, 98, 67, 532, 611, 7, 100, 42];
// console.log(scores); // 13

// scores.shift();
// scores.shift();
// console.log(scores); // 11

// scores.pop();
// scores.pop();
// scores.pop();
// console.log(scores); // 8
